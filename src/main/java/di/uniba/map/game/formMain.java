/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package di.uniba.map.game;

import di.uniba.map.game.engine.Engine;
import di.uniba.map.game.games.GothicGame;
import di.uniba.map.game.language.LanguageSelector;

import java.awt.event.ActionEvent;
import java.io.*;
import java.lang.reflect.InvocationTargetException;
import javax.swing.*;
import java.util.Scanner;

/**
 *
 * @author Giuseppe
 */
public class formMain extends javax.swing.JFrame {

    /**
     * Creates new form formMain
     */
    public formMain() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Game Engine - Giuseppe Napoletano");
        setResizable(false);

        jButton1.setText("Play Gothicgame");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Load from file");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton2ActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                } catch (IllegalAccessException e) {
                    e.printStackTrace();
                } catch (InstantiationException e) {
                    e.printStackTrace();
                } catch (NoSuchMethodException e) {
                    e.printStackTrace();
                } catch (InvocationTargetException e) {
                    e.printStackTrace();
                }
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(125, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                .addGap(118, 118, 118))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {

            Scanner input = new Scanner ( System.in, "UTF-8");
                String command;
                System.out.println("Select language [it/en]");
                command = input.nextLine().toLowerCase();
                while(!command.equals("it") && !command.equals("en")){
                    System.out.println("Errore! Digita 'it' per salvare la partita, 'en' se vuoi continuare la partita");
                    command = input.nextLine().toLowerCase();
                }
                if(command.equals("it")){
                    LanguageSelector language = new LanguageSelector("it");
                    this.setVisible(false);
                    Engine engine = new Engine(new GothicGame(), language);
                    Engine.engine(engine, language);
                    this.setVisible(true);
                }else {
                    if (command.equals("en")) {
                        LanguageSelector language = new LanguageSelector("en");
                        this.setVisible(false);
                        Engine engine = new Engine(new GothicGame(), language);
                        Engine.engine(engine, language);
                        this.setVisible(true);
                    }
            }
        } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(ActionEvent evt) throws IOException, IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException {//GEN-FIRST:event_jButton2ActionPerformed
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);

        Scanner input = new Scanner ( System.in, "UTF-8");
        String command;
        System.out.println("Select language [it/en]");

        command = input.nextLine().toLowerCase();
        while(!command.equals("it") && !command.equals("en")){
            System.out.println("Errore! Digita 'it' per salvare la partita, 'en' se vuoi continuare la partita");
            command = input.nextLine().toLowerCase();
        }
        if(command.equals("it")){
            LanguageSelector language = new LanguageSelector("it");

            if(returnVal == JFileChooser.APPROVE_OPTION){
                File f = fc.getSelectedFile();
                if(textFileCheck(f)){
                    FileInputStream in;
                    FileOutputStream out = null;
                    try{
                        in = new FileInputStream(f);
                        out = new FileOutputStream(f.getParent() + "/Game.java");
                        int c;
                        while ((c = in.read()) != -1) {
                            out.write(c);
                        }
                    }catch (FileNotFoundException ex){
                        JOptionPane.showMessageDialog(null, language.getDocument().getElementsByTagName("file_not_found").item(0).getTextContent(), language.getDocument().getElementsByTagName("attention").item(0).getTextContent(), JOptionPane.WARNING_MESSAGE);
                    }
                    finally {
                        if (out != null) {
                            out.close();
                        }
                    }
                    Class gameClass = Compiler.compiler(f.getParent(), language);
                    if(gameClass != null){
                        Object obj = gameClass.getDeclaredConstructor().newInstance();
                        this.setVisible(false);
                        Engine engine = new Engine(obj, language);
                        Engine.engine(engine, language);
                        this.setVisible(true);
                    }else{
                        JOptionPane.showMessageDialog(null, language.getDocument().getElementsByTagName("interpretation_error").item(0).getTextContent(), language.getDocument().getElementsByTagName("error").item(0).getTextContent(), JOptionPane.ERROR_MESSAGE);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, language.getDocument().getElementsByTagName("file_not_supported").item(0).getTextContent(), language.getDocument().getElementsByTagName("error").item(0).getTextContent(), JOptionPane.ERROR_MESSAGE);
                }
            }

        }else {
            if (command.equals("en")) {
                LanguageSelector language = new LanguageSelector("en");

                if(returnVal == JFileChooser.APPROVE_OPTION){
                    File f = fc.getSelectedFile();
                    if(textFileCheck(f)){
                        FileInputStream in;
                        FileOutputStream out = null;
                        try{
                            in = new FileInputStream(f);
                            out = new FileOutputStream(f.getParent() + "/Game.java");
                            int c;
                            while ((c = in.read()) != -1) {
                                out.write(c);
                            }
                        }catch (FileNotFoundException ex){
                            JOptionPane.showMessageDialog(null, language.getDocument().getElementsByTagName("file_not_found").item(0).getTextContent(), language.getDocument().getElementsByTagName("attention").item(0).getTextContent(), JOptionPane.WARNING_MESSAGE);
                        }
                        finally {
                            if (out != null) {
                                out.close();
                            }
                        }
                        Class gameClass = Compiler.compiler(f.getParent(), language);
                        if(gameClass != null){
                            Object obj = gameClass.getDeclaredConstructor().newInstance();
                            this.setVisible(false);
                            Engine engine = new Engine(obj, language);
                            Engine.engine(engine, language);
                            this.setVisible(true);
                        }else{
                            JOptionPane.showMessageDialog(null, language.getDocument().getElementsByTagName("interpretation_error").item(0).getTextContent(), language.getDocument().getElementsByTagName("error").item(0).getTextContent(), JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(null, language.getDocument().getElementsByTagName("file_not_supported").item(0).getTextContent(), language.getDocument().getElementsByTagName("error").item(0).getTextContent(), JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }



    }//GEN-LAST:event_jButton2ActionPerformed

    private boolean textFileCheck(File file){
        boolean res = false;
        if (file.isDirectory()) {
            return true;
        }
        String name = file.getName().toLowerCase();
        if(name.endsWith("txt") || name.endsWith("java")){
            res = true;
        }
        return res;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration//GEN-END:variables
}
